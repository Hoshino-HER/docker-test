name: Mycropython Docker Image CI

on:
  push:
    branches: [ "main", "dev*" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      REGISTRY: ghcr.io
      IMAGE_OWNER: ${{ github.repository_owner }}
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: prune
        run: |
          echo ===== Prune docker images =====
          docker image prune --force

      - name: Pre check
        run: |
          echo "Precheck"
          export REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)
          echo "Repository: $REPO_NAME"
          echo "REPO_NAME=$REPO_NAME" >> "$GITHUB_ENV"

          export IMG_VER=$(date +%Y%m%d%H%M)
          echo "Image version: $IMG_VER"
          echo "IMG_VER=$IMG_VER" >> "$GITHUB_ENV"

          echo "Docker username: ${{ env.DOCKER_USERNAME }}"
          echo "Docker password (test): ${{ secrets.DOCKER_PASSWORD }}"

          echo "GitHub username: ${{ github.actor }}"

          echo "Iamge username: ${{ env.IMAGE_OWNER }}"
          echo "Iamge name: ${{ env.IMAGE_NAME }}"

      - name: Check out code
        uses: actions/checkout@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ env.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=develop,enable=${{ github.ref_name != 'main' }}
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
          labels: |
            org.opencontainers.image.title=”TEST image title"
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.description=”TEST image and this is description."

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/simple.dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/$REPO_NAME:$IMG_VER
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            INCLUDE_MONGODBTOOLS=true
            PREINSTALL_LIBS=true
